<?xml version="1.0"?>
<!-- 
    注意: 除了手动编辑此文件以外，您还可以使用 
    Web 管理工具来配置应用程序的设置。可以使用 Visual Studio 中的
     “网站”->“Asp.Net 配置”选项。
    设置和注释的完整列表在 
    machine.config.comments 中，该文件通常位于 
    \Windows\Microsoft.Net\Framework\v2.x\Config 中
-->
<configuration>
  <appSettings>
    <!--是否启用全局调试。默认为不启用-->
    <add key="NewLife.Debug" value="true"/>
    <!--是否启用调试，默认不启用。输出所有执行的SQL语句-->
    <add key="XCode.Debug" value="true"/>
    <!--是否启用数据架构，默认不启用。数据架构可以实现通过实体类反向更新数据库结构，不启用时，仅把更新SQL写入日志，如果留空则不做检查-->
    <add key="XCode.Schema.Enable" value="true"/>
    <!--是否启用不删除字段，默认不启用。删除字段的操作过于危险，这里可以通过设为true关闭-->
    <add key="XCode.Schema.NoDelete" value="false"/>
    <!--要排除的链接名，多个用逗号分隔，默认空。-->
    <add key="XCode.Schema.Exclude" value=""/>
      
    <add key="Configpath" value="~/xmlconfig/site.config"/>
    <add key="BackUpPath" value="~/xmlconfig/backup.config"/>
    <!--<add key="DataSoureceKind" value="XmlCommand"/>-->
  </appSettings>
  <connectionStrings>
    <add name="hzsweb" connectionString="server=.;uid=sa;pwd=sunsoft;database=sclxnjw" providerName="System.Data.SqlClient"/>
  </connectionStrings>
  <system.web>
    <!-- 
            设置 compilation debug="true" 可将调试符号插入
            已编译的页面中。但由于这会 
            影响性能，因此只应在开发过程中设置 
            此值。

            Visual Basic 选项:
            设置 strict="true" 将禁止所有会导致 
            数据丢失的类型转换。 
            设置 explicit="true" 将强制声明所有变量。
        -->
    <compilation debug="true" strict="false" explicit="true">
      <assemblies>
        <add assembly="System.Core, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Web.Extensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=31BF3856AD364E35"/>
        <add assembly="System.Data.DataSetExtensions, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
        <add assembly="System.Xml.Linq, Version=3.5.0.0, Culture=neutral, PublicKeyToken=B77A5C561934E089"/>
      </assemblies>
    </compilation>
    <pages enableSessionState="false" enableViewState="false" enableViewStateMac="false" autoEventWireup="false" validateRequest="false" pageBaseType="MyMVC.MyBasePage, MyMVC" pageParserFilterType="MyMVC.ViewTypeParserFilter, MyMVC" userControlBaseType="MyMVC.MyBaseUserControl, MyMVC">
      <namespaces>
        <add namespace="System"/>
        <add namespace="System.Collections"/>
        <add namespace="System.Collections.Generic"/>
        <add namespace="System.Text"/>
        <add namespace="System.Linq"/>
        <add namespace="System.Xml.Linq"/>
        <add namespace="MyMVC"/>
        <add namespace="HzsCommon"/>
        <add namespace="HzsModel"/>
        <add namespace="HzsWebUI"/>
      </namespaces>
    </pages>
    <!--
            通过 <authentication> 节可以配置 ASP.NET 用来 
            识别进入用户的
            安全身份验证模式。 
        -->
    <authentication mode="None"/>
    <!--
            如果在执行请求的过程中出现未处理的错误，
            则通过 <customErrors> 节可以配置相应的处理步骤。具体说来，
            开发人员通过该节可以配置
            要显示的 html 错误页
            以代替错误堆栈跟踪。

        <customErrors mode="RemoteOnly" defaultRedirect="GenericErrorPage.htm">
            <error statusCode="403" redirect="NoAccess.htm" />
            <error statusCode="404" redirect="FileNotFound.htm" />
        </customErrors>
        -->
    <customErrors mode="RemoteOnly" defaultRedirect="error.htm">
      <error statusCode="403" redirect="error.htm"/>
      <error statusCode="302" redirect="error.htm"/>
      <error statusCode="404" redirect="error.htm"/>
    </customErrors>
    <httpHandlers>
      <add path="*.ashx" verb="*" type="MyMVC.AjaxHandlerFactory, MyMVC" validate="true"/>
    </httpHandlers>
    <httpModules>
      <!--<remove name="Session"/>-->
      <!--<remove name="RoleManager"/>-->
      <!--<remove name="PassportAuthentication"/>
          <remove name="Profile"/>
          <remove name="ServiceModel"/>-->
      <!--对于使用Forms身份认证的网站的来说，下面这些HttpModule也是可以禁用的：-->
    </httpModules>
  </system.web>
  <system.codedom>
    <compilers>
      <compiler language="c#;cs;csharp" extension=".cs" warningLevel="4" type="Microsoft.CSharp.CSharpCodeProvider, System, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
        <providerOption name="CompilerVersion" value="v3.5"/>
        <providerOption name="WarnAsError" value="false"/>
      </compiler>
    </compilers>
  </system.codedom>
  <!-- 
        在 Internet 信息服务 7.0 下运行 ASP.NET AJAX 需要 system.webServer
        节。对早期版本的 IIS 来说则不需要此节。
    -->
  <system.webServer>
    <validation validateIntegratedModeConfiguration="false"/>
    <handlers>
      <add name="AjaxHandlerFactory" verb="*" path="*.ashx" type="MyMVC.AjaxHandlerFactory, MyMVC" preCondition="integratedMode"/>
    </handlers>
    <modules/>
    <defaultDocument>
      <files>
        <clear/>
        <add value="index.htm"/>
        <add value="index.aspx"/>
      </files>
    </defaultDocument>
    <staticContent>
      <mimeMap fileExtension=".apk" mimeType="application/vnd.android.package-archive"/>
    </staticContent>
  </system.webServer>
  <runtime>
    <assemblyBinding appliesTo="v2.0.50727" xmlns="urn:schemas-microsoft-com:asm.v1">
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
      <dependentAssembly>
        <assemblyIdentity name="System.Web.Extensions.Design" publicKeyToken="31bf3856ad364e35"/>
        <bindingRedirect oldVersion="1.0.0.0-1.1.0.0" newVersion="3.5.0.0"/>
      </dependentAssembly>
    </assemblyBinding>
  </runtime>
</configuration>